import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'org.ajoberstar.grgit' version '5.2.1'
    id 'xyz.jpenilla.run-paper' version '2.2.3'
    id 'maven-publish'
    id 'java'
}

group 'net.william278'
version "$ext.plugin_version${versionMetadata()}"
description "$ext.plugin_description"
defaultTasks 'licenseFormat', 'build'

tasks {
    runServer {
        minecraftVersion('1.20.4')
    }
}

ext {
    set 'version', version.toString()
    set 'description', description.toString()
    set 'jetty_server_version', jetty_server_version.toString()
    set 'jetty_servlet_version', jetty_servlet_version.toString()
}

repositories {
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://repo.minebench.de/' }
    maven { url = 'https://jitpack.io/' }
}

dependencies {
    implementation 'net.william278:DesertWell:2.0.4'
    implementation 'org.bstats:bstats-bukkit:3.0.2'
    implementation 'com.github.Exlll.ConfigLib:configlib-yaml:v4.3.0'
    implementation 'de.themoep:minedown-adventure:1.7.2-SNAPSHOT'
    implementation 'net.kyori:adventure-platform-bukkit:4.3.1'
    implementation 'com.github.GoldenDelicios:Lite2Edit:v1.1.1'

    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly "org.eclipse.jetty:jetty-server:${jetty_server_version}"
    compileOnly "org.eclipse.jetty:jetty-servlet:${jetty_servlet_version}"
    compileOnly 'org.projectlombok:lombok:1.18.30'

    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

processResources {
    filesMatching(['**/*.json', '**/*.yml']) {
        filter ReplaceTokens as Class, beginToken: '${', endToken: '}',
                tokens: rootProject.ext.properties
    }
}

license {
    header = rootProject.file('HEADER')
    include '**/*.java'
    newLine = true
}

logger.lifecycle("Building SchematicUpload ${version} by William278")

version rootProject.version
archivesBaseName = "${rootProject.name}"

compileJava.options.encoding = 'UTF-8'
compileJava.options.release.set 17
javadoc.options.encoding = 'UTF-8'
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

java {
    withSourcesJar()
    withJavadocJar()
}

shadowJar {
    relocate 'net.william278.desertwell', 'net.william278.schematicupload.libraries.desertwell'
    relocate 'org.jetbrains', 'net.william278.schematicupload.libraries'
    relocate 'org.intellij', 'net.william278.schematicupload.libraries'
    relocate 'de.themoep', 'net.william278.schematicupload.libraries'
    relocate 'org.bstats', 'net.william278.schematicupload.libraries.bstats'
    relocate 'net.kyori', 'net.william278.schematicupload.libraries'
    relocate 'de.exlll', 'net.william278.schematicupload.libraries'
    relocate 'goldendelicios.lite2edit', 'net.william278.schematicupload.libraries.lite2edit'
    relocate 'org.snakeyaml', 'net.william278.schematicupload.libraries.snakeyaml'

    dependencies {
        //noinspection GroovyAssignabilityCheck
        exclude dependency(':slf4j-api')
    }

    destinationDirectory.set(file("$rootDir/target"))
    archiveClassifier.set('')

    minimize()
}
jar.dependsOn shadowJar
clean.delete "$rootDir/target"

@SuppressWarnings('GrMethodMayBeStatic')
def versionMetadata() {
    // Get if there is a tag for this commit
    def tag = grgit.tag.list().find { it.commit.id == grgit.head().id }
    if (tag != null) {
        return ''
    }

    // Otherwise, get the last commit hash and if it's a clean head
    if (grgit == null) {
        return '-' + System.getenv("GITHUB_RUN_NUMBER") ? 'build.' + System.getenv("GITHUB_RUN_NUMBER") : 'unknown'
    }
    return '-' + grgit.head().abbreviatedId + (grgit.status().clean ? '' : '-indev')
}